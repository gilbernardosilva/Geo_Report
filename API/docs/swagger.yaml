basePath: /api/v1
definitions:
  dto.LoginDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  dto.UserCreatedDTO:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - firstname
    - lastname
    - password
    - username
    type: object
  dto.UserResponseDTO:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    required:
    - email
    - firstname
    - lastname
    - username
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: returns token for login
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: Login
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: registers user in database
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreatedDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
      summary: Register
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
