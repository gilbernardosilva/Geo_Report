name: CI/CD

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      TOKEN_TTL: ${{ secrets.TOKEN_TTL }}
      REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate .env file
        run: |
          echo "DB_HOST=${DB_HOST}" > .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "DB_DATABASE=${DB_DATABASE}" >> .env
          echo "DB_USERNAME=${DB_USERNAME}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
          echo "JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}" >> .env
          echo "TOKEN_TTL=${TOKEN_TTL}" >> .env
          echo "REACT_APP_API_URL=${REACT_APP_API_URL}" >> .env

      - name: Stop and remove existing containers
        run: |
          docker-compose -f ./docker-compose.yml down --remove-orphans

      - name: Build and push backend image
        run: |
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend

      - name: Build and push frontend image
        run: |
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f ./docker-compose.yml up -d
