name: CI/CD

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set environment variables
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "JWT_PRIVATE_KEY=${{ secrets.JWT_PRIVATE_KEY }}" >> $GITHUB_ENV
        echo "TOKEN_TTL=${{ secrets.TOKEN_TTL }}" >> $GITHUB_ENV
        echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> $GITHUB_ENV

    - name: Build and push backend image
      run: |
        docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend

    - name: Build and push frontend image
      run: |
        docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend

    - name: Deploy with Docker Compose
      run: |
        docker-compose down
        docker-compose up -d
