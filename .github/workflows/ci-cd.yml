name: Docker Compose CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "JWT_PRIVATE_KEY=${{ secrets.JWT_PRIVATE_KEY }}" >> .env
          echo "TOKEN_TTL=${{ secrets.TOKEN_TTL }}" >> .env
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

      - name: Create temporary SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > temp_ssh_key
          chmod 600 temp_ssh_key

      - name: Create & Copy necessary files to droplet
        run: |
          ssh -i temp_ssh_key -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }} "mkdir -p ${{ secrets.DROPLET_PATH }}/nginx"
          scp -i temp_ssh_key -o StrictHostKeyChecking=no .env ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }}:${{ secrets.DROPLET_PATH }}
          scp -i temp_ssh_key -o StrictHostKeyChecking=no docker-compose-deploy.yml ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }}:${{ secrets.DROPLET_PATH }}
          scp -i temp_ssh_key -o StrictHostKeyChecking=no nginx/nginx.conf ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }}:${{ secrets.DROPLET_PATH }}/nginx/

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set Docker Hub username as environment variable
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          docker compose -f docker-compose-build.yml build
          docker compose -f docker-compose-build.yml push

      - name: Deploy and check service health
        run: |
          ssh -i temp_ssh_key -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }} "cd ${{ secrets.DROPLET_PATH }} && docker compose -f docker-compose-deploy.yml pull && docker compose -f docker-compose-deploy.yml up -d && docker compose -f docker-compose-deploy.yml ps"

      - name: Clean up old images and containers
        run: |
          ssh -i temp_ssh_key -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }} "docker image prune -af && docker container prune -f"

      - name: Remove temporary SSH key file
        run: |
          rm -f temp_ssh_key
